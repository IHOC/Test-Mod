package com.example.examplemod.tileentity;

import com.example.examplemod.reference.Reference;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.*;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;

public class InventorySingleFixture extends TileEntity implements IInventory {

	private ItemStack[] fixtureContents = new ItemStack[1];
	
	public InventorySingleFixture() {
		
	}
	
	@Override
	public int getSizeInventory() {
		// TODO Auto-generated method stub
		return 1;
	}

	@Override
	public ItemStack getStackInSlot(int i) {
		// TODO Auto-generated method stub
		return this.fixtureContents[i];
	}

	@Override
	public ItemStack decrStackSize(int i, int y) {
		if (this.fixtureContents[i] != null)
        {
            ItemStack itemstack;

            if (this.fixtureContents[i].stackSize <= y)
            {
                itemstack = this.fixtureContents[i];
                this.fixtureContents[i] = null;
                this.markDirty();
                return itemstack;
            }
            else
            {
                itemstack = this.fixtureContents[i].splitStack(y);

                if (this.fixtureContents[i].stackSize == 0)
                {
                    this.fixtureContents[i] = null;
                }

                this.markDirty();
                return itemstack;
            }
        }
        else
        {
            return null;
        }
	}

	@Override
	public ItemStack getStackInSlotOnClosing(int i) {
		if (this.fixtureContents[i] != null)
        {
            ItemStack itemstack = this.fixtureContents[i];
            this.fixtureContents[i] = null;
            return itemstack;
        }
        else
        {
            return null;
        }
	}

	@Override
	public void setInventorySlotContents(int i, ItemStack y) {
		this.fixtureContents[i] = y;

        if (y != null && y.stackSize > this.getInventoryStackLimit())
        {
            y.stackSize = this.getInventoryStackLimit();
        }

        this.markDirty();
	}

	@Override
	public String getInventoryName() {
		return Reference.SINGLE_FIXTURE_INVENTORY_NAME;
	}

	@Override
	public boolean hasCustomInventoryName() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int getInventoryStackLimit() {
		// TODO Auto-generated method stub
		return 1;
	}

	@Override
	public boolean isUseableByPlayer(EntityPlayer player) {
		return this.worldObj.getTileEntity(this.xCoord, this.yCoord, this.zCoord) != this ? false : player.getDistanceSq((double)this.xCoord + 0.5D, (double)this.yCoord + 0.5D, (double)this.zCoord + 0.5D) <= 64.0D;
	}

	@Override
	public void openInventory() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void closeInventory() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean isItemValidForSlot(int p_94041_1_, ItemStack p_94041_2_) {
		// TODO Auto-generated method stub
		return false;
	}

	

}
